model User {
  id        String       @id @default(cuid())
  name      String?
  email     String?      @unique
  phone     String?      @unique
  role      String       @default("EMPLOYEE") // EMPLOYEE or MANAGER
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  tasks     Task[]       @relation("AssignedTasks")
  uploads   Attachment[] @relation("UploadedBy")
}

model Column {
  id        String   @id @default(cuid())
  name      String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
}

model Attachment {
  id         String   @id @default(cuid())
  filename   String
  fileUrl    String
  fileType   String
  fileSize   Int
  taskId     String
  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  uploaderId String
  uploader   User     @relation("UploadedBy", fields: [uploaderId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model TelegramSettings {
  id              String   @id @default(cuid())
  botToken        String
  defaultColumnId String
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Task {
  id              String       @id @default(cuid())
  title           String
  description     String?      @default("")
  assigneeId      String?
  assignee        User?        @relation("AssignedTasks", fields: [assigneeId], references: [id])
  columnId        String?
  column          Column?      @relation(fields: [columnId], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  publishAt       DateTime?
  publishTelegram Boolean      @default(true)
  publishVkOk     Boolean      @default(true)
  publishWebsite  Boolean      @default(true)
  priority        String       @default("green") // Flag color: red, yellow, green
  attachments     Attachment[]
  source          String? // Source of the task (e.g., "telegram")
  sourceUser      String? // Username or identifier from the source
}